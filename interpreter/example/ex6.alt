shared {
    enum mtype = { create, created };
}

process node(var depth: int, chan parent) {
    chan rChild: mtype[1];
    chan lChild: mtype[1];

    wait parent.receive(create);
    if (depth > 0) {
        run node(depth-1, rChild);
        rChild.send(create);
        wait rChild.receive(created);

        run node(depth - 1, lChild);
        lChild.send(create);
        wait lChild.receive(created);
    }
    parent.send(created);
}

main {
    chan child: mtype[1];
    run node(3, child);
    child.send(create);
    wait child.receive(created);
}